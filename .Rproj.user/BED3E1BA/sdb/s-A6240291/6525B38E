{
    "contents" : "library(ggplot2)\ndata(trees)\n\ndig <- function(num, digits = 1) {\n    # Use to keep trailing zeros in a print statement.\n    return(format(num, nsmall=digits))\n}\n\nshinyServer(function(input, output) {\n    # Make new data frame with only selected variables\n    selectedData <- reactive({\n        data.frame(xval = trees[[input$xcol]], yval = trees[[input$ycol]])\n    })\n    \n    # Fit a linear model\n    makeFit <- reactive({\n        lm(yval ~ xval, data = selectedData())\n    })\n    \n    # Return prediction and CI for input NUM\n    makePredict <- reactive({\n        predict(makeFit(), data.frame(xval = input$num), \n                interval = \"prediction\", level = 0.68)\n    })\n    \n    # Scatter plot of selected values\n    output$treePlot <- renderPlot({\n        # Make the plot and label axes\n        p <- qplot(x = xval, y = yval, data = selectedData())\n        p <- p + labs(x = input$xcol, y = input$ycol)\n        \n        # Add a line corresponding to the linear fit\n        p <- p + stat_smooth(method = \"lm\")\n        \n        # If a predictor variable has been entered, plot a line for it as well.\n        if (!is.numeric(input$num)) p \n        else {\n            pred <- makePredict()\n            p + annotate(\"pointrange\",\n                         x = input$num,\n                         y = pred[1],\n                         ymin = pred[2], \n                         ymax = pred[3],\n                         size = 1.5,\n                         color = \"darkblue\")\n        }\n    })\n    \n    output$fit_text <- reactive({\n        # Print the numeric output from the linear model\n        if (is.numeric(input$num)) {\n            round_predict <- round(makePredict(),1)\n            paste(\"Predicted\", input$ycol, \"is\", dig(round_predict[1]), \n                  \"with 68% CI\", dig(round_predict[2]), \n                  \"to\", dig(round_predict[3]))\n        } else \"\"\n    })\n    \n    output$error_text <- reactive({\n        # Warn if the input value is out of range for the supplied data\n        select_data <- selectedData()\n        if (is.numeric(input$num) && (\n            input$num < min(select_data[\"xval\"]) || \n                input$num > max(select_data[\"xval\"]))) {\n            \"WARNING: Predictor value is out of range for the \n            training data set\"\n        } else \"\"\n    })\n    \n})\n",
    "created" : 1415561691829.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1758791839",
    "id" : "6525B38E",
    "lastKnownWriteTime" : 1415572235,
    "path" : "~/coursera/dataprod/trees-app/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}